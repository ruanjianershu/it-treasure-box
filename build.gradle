buildscript {
    ext {
        springBootVersion = '2.4.6'
        springCloudVersion = '2021.0.4'
        springframeworkVersion = '5.3.7'
        hessianVersion = '4.0.65'
        protostuffVersion = '1.7.4'
        mybatisVersion = '2.2.0'
        commonsCodecVersion = '1.15'
        jSqlParserVersion = '1.1'
        druidVersion = '1.2.5'
        kafkaClientsVersion = "2.1.0"
        disruptorVersion = "3.4.2"
        projectreactorVersion = "3.4.6"
        springfoxVersion = '3.0.0'
        swaggerVersion = '1.5.20'
        kaptchaVersion = '2.3.2'
        guavaVersion = '23.0'
        bcprovJdk15onVersion = '1.68'
        slf4jVersion = '1.7.30'
        log4j2Version = '2.17.1'
        commonsPool2Version = '2.4.3'
        resilience4jBulkheadVersion = '1.7.0'

        oracleVersion = '11.2.0.4'
        ojdbc8Version = '19.9.0.0'
        mysqlVersion = '8.0.25'
        mybatisVersion2 = '3.5.7'
        validationVersion = '2.0.2'
        annotationApiVersion = '1.3.2'
        dubboVersion = '3.0.5'
        curatorVersion = '4.2.0'
        zookeeperVersion = '3.4.12'
        p6spyVersion = '3.9.1'
        datasourceProxyVersion = '1.7'
        hikariVersion = '3.4.5'
        apacheHttpClientVersion = '4.5.13'
        shardingSphereVersion = '4.1.1'
        kafkaClientsVersion = '2.1.0'
        elasticjobVersion = '3.0.0'
        activitiVersion = '7.1.0.M6'

        commonsLang3Version = "3.8.1"

    }
    repositories {
        maven { url "https://maven.aliyun.com/repository/google" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    //漏洞（CVE-2022-22965）修复
    ext['spring-framework.version'] = '5.3.18'
    //漏洞（spring cloud function SpEL表达式注入）修复
    ext['spring-cloud-function.version'] = '3.1.7'

    group = 'com.it-treasure-box'
    version = '1.0.0-SNAPSHOT'
    //version = '2020.1.0-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    jar {
        enabled = true
    }
    bootJar {
        enabled = false
    }
    artifacts {
        archives jar
    }

    configurations {
        all*.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }

    repositories {
        maven { url "https://maven.aliyun.com/repository/google" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
        dependencies {
            dependency("org.apache.curator:curator-x-discovery:${curatorVersion}")
            dependency("org.apache.curator:curator-recipes:${curatorVersion}")
            dependency("org.apache.curator:curator-framework:${curatorVersion}")
            dependency("org.apache.curator:curator-client:${curatorVersion}")
            dependency("org.apache.zookeeper:zookeeper:${zookeeperVersion}")
        }
    }
    dependencies {
        annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
        annotationProcessor("org.projectlombok:lombok")
        compileOnly("org.projectlombok:lombok")
        compileOnly("org.slf4j:slf4j-api:${slf4jVersion}")
        testImplementation("org.projectlombok:lombok")
    }
    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = "sources"
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        from javadoc.destinationDir
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                artifact sourceJar
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
    }
}
description = "SpringCloud脚手架"